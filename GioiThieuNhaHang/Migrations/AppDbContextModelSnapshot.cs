// <auto-generated />
using System;
using GioiThieuNhaHang.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GioiThieuNhaHang.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GioiThieuNhaHang.Models.AdminLogs", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<string>("HanhDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAD")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("LogID");

                    b.HasIndex("IdAD");

                    b.ToTable("AdminLog");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.AdminRoles", b =>
                {
                    b.Property<int>("IdAD")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("IdAD", "RoleID");

                    b.HasIndex("RoleID");

                    b.ToTable("AdminRole");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.AdminUser", b =>
                {
                    b.Property<int>("IdAD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAD"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAD");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.DatBan", b =>
                {
                    b.Property<int>("IdDatBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDatBan"));

                    b.Property<bool>("DaXacNhan")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoNguoi")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDatBan");

                    b.ToTable("DatBan");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.KhachHang", b =>
                {
                    b.Property<int>("IdKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKH"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdKH");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.LienHe", b =>
                {
                    b.Property<int>("IdLienHe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLienHe"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLienHe");

                    b.ToTable("LienHe");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.LoaiMon", b =>
                {
                    b.Property<int>("IdLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLoai"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLoai");

                    b.ToTable("LoaiMon");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.MonAn", b =>
                {
                    b.Property<int>("IdMonAn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMonAn"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdLoai")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMonAn");

                    b.HasIndex("IdLoai");

                    b.ToTable("MonAn");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.TinTuc", b =>
                {
                    b.Property<int>("IdTinTuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTinTuc"));

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTinTuc");

                    b.ToTable("TinTuc");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.AdminLogs", b =>
                {
                    b.HasOne("GioiThieuNhaHang.Models.AdminUser", "AdminUser")
                        .WithMany("Logs")
                        .HasForeignKey("IdAD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminUser");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.AdminRoles", b =>
                {
                    b.HasOne("GioiThieuNhaHang.Models.AdminUser", "AdminUser")
                        .WithMany("AdminRoles")
                        .HasForeignKey("IdAD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GioiThieuNhaHang.Models.Roles", "Role")
                        .WithMany("AdminRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminUser");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.MonAn", b =>
                {
                    b.HasOne("GioiThieuNhaHang.Models.LoaiMon", "LoaiMon")
                        .WithMany("MonAns")
                        .HasForeignKey("IdLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiMon");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.AdminUser", b =>
                {
                    b.Navigation("AdminRoles");

                    b.Navigation("Logs");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.LoaiMon", b =>
                {
                    b.Navigation("MonAns");
                });

            modelBuilder.Entity("GioiThieuNhaHang.Models.Roles", b =>
                {
                    b.Navigation("AdminRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
